<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>排序算法 on BLOOOOOG</title>
    <link>http://Rickenbacker620.github.io/series/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 排序算法 on BLOOOOOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>parasitifer@outlook.com (Coding Noob)</managingEditor>
    <webMaster>parasitifer@outlook.com (Coding Noob)</webMaster>
    <copyright>&amp;copy;{year}, Coding Noob All Rights Reserved</copyright>
    <lastBuildDate>Tue, 04 Aug 2020 14:32:41 +0000</lastBuildDate>
    
        <atom:link href="http://Rickenbacker620.github.io/series/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>桶排序</title>
        <link>http://Rickenbacker620.github.io/posts/bucket-sorting/</link>
        <pubDate>Tue, 04 Aug 2020 14:32:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Tue, 04 Aug 2020 14:32:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/bucket-sorting/</guid>
        <description>桶排序 平均时间复杂度 最坏时间复杂度 额外空间复杂度 稳定性 O(n) O(n) O(m) 不稳定 桶排序简介 桶排序将数组分到有限数量的桶里，每个桶里再进行排序。由桶排序衍生</description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/sort.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>桶排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      
      <item>
        <title>快速排序</title>
        <link>http://Rickenbacker620.github.io/posts/quick-sorting/</link>
        <pubDate>Mon, 03 Aug 2020 17:32:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Mon, 03 Aug 2020 17:32:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/quick-sorting/</guid>
        <description>平均时间复杂度 最坏时间复杂度 额外空间复杂度 稳定性 O(nlogn) O(n2) O(logn) 不稳定 快速排序简介 快速排序又称分区交换排序，是一种非常常用的排序方法。通常情况下比其他</description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/sort.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>快速排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      
      <item>
        <title>归并排序</title>
        <link>http://Rickenbacker620.github.io/posts/merge-sorting/</link>
        <pubDate>Sat, 01 Aug 2020 17:32:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Sat, 01 Aug 2020 17:32:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/merge-sorting/</guid>
        <description>平均时间复杂度 最坏时间复杂度 额外空间复杂度 稳定性 O(nlog2n) O(nlog2n) O(n) 稳定 归并排序简介 归并排序把一组数据分为两段，将两段数据排序，再从两段中逐个选中最小的元</description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/sort.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>归并排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      
      <item>
        <title>初级排序算法</title>
        <link>http://Rickenbacker620.github.io/posts/basic-sorting/</link>
        <pubDate>Mon, 27 Jul 2020 17:32:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Mon, 27 Jul 2020 17:32:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/basic-sorting/</guid>
        <description>冒泡排序 平均时间复杂度 最坏时间复杂度 额外空间复杂度 稳定性 O(n2) O(n2) O(1) 稳定 冒泡排序简介 冒牌排序易于理解，稳定，且冒泡排序还是一种就地排序。（即不需要</description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/sort.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>冒泡排序</category>
            
          
            
              <category>选择排序</category>
            
          
            
              <category>插入排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      
      <item>
        <title>排序算法概述</title>
        <link>http://Rickenbacker620.github.io/posts/sortlead/</link>
        <pubDate>Sun, 26 Jul 2020 10:33:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Sun, 26 Jul 2020 10:33:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/sortlead/</guid>
        <description>排序算法 所有的排序算法中一般都包含几个固定的函数: 函数 功能 compare(less/more)函数(C++中使用重载运算符 &amp;lt;/&amp;gt; 实现) 比较数据大</description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/sort.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      
      <item>
        <title>队列</title>
        <link>http://Rickenbacker620.github.io/posts/queue/</link>
        <pubDate>Wed, 03 Jun 2020 17:32:41 +0000</pubDate>
        <author>parasitifer@outlook.com (Coding Noob)</author>
        <atom:modified>Wed, 03 Jun 2020 17:32:41 +0000</atom:modified>
        <guid>http://Rickenbacker620.github.io/posts/queue/</guid>
        <description></description>
        
        <dc:creator>Coding Noob</dc:creator>
        <media:content url="http://Rickenbacker620.github.ioimages/coding/list.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>归并排序</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
      </item>
      

    
  </channel>
</rss>